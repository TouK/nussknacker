# This file contains sensible defaults for simple, recommended Nussknacker deployment - with one generic model, deployed on Flink
# In most cases it should be possible to override parts of this configuration by providing
# additional config file (see https://github.com/TouK/nussknacker-quickstart/blob/main/nussknacker/nussknacker.conf)

environment: "local"

scenarioTypes {
  "streaming" {
    deploymentConfig {
      type: "flinkStreaming"
      jobManagerTimeout: 1m
      restUrl: ${?FLINK_REST_URL}
    }
    modelConfig {
      classPath: ["model/defaultModel.jar", "model/flinkExecutor.jar", "components/flink", "components/common", "flink-dropwizard-metrics-deps/"]
      classPath: ${?MODEL_CLASS_PATH}
      rocksDB {
        enable: ${?FLINK_ROCKSDB_ENABLE}
      }
      components.kafka {
        config: ${kafkaConfig}
      }
    }
    category: "Default"
  }
  "streaming-lite-embedded" {
    deploymentConfig {
      type: "lite-embedded"
      mode: "streaming"
      metrics {
        instanceId: "local",
        environment: ${environment},
        influx {
          url: ${?INFLUXDB_URL}"/write",
          database: "esp",
        }
      }
    }
    modelConfig {
      classPath: ["model/defaultModel.jar", "components/lite/liteBase.jar", "components/lite/liteKafka.jar", "components/common"]
      classPath: ${?MODEL_CLASS_PATH}

      kafka: ${kafkaConfig}
      exceptionHandlingConfig {
        topic: "errors"
      }
    }
    category: "Default"
  }
  "request-response-embedded": {
    deploymentConfig {
      type: "lite-embedded"
      mode: "request-response"
      http {
        port: 8181
        port: ${?REQUEST_RESPONSE_PORT}
        interface: ${?REQUEST_RESPONSE_INTERFACE}
      }
      metrics {
        instanceId: "local",
        environment: ${environment},
        influx {
          url: ${?INFLUXDB_URL}"/write",
          database: "esp",
        }
      }
    }
    modelConfig {
      classPath: ["model/defaultModel.jar", "components/lite/liteRequestResponse.jar", "components/lite/liteBase.jar", "components/common"]
      classPath: ${?MODEL_CLASS_PATH}
    }
    category: "Default"
  }
}

kafkaConfig {
  kafkaProperties {
    "bootstrap.servers": ${?KAFKA_ADDRESS}
    "schema.registry.url": ${?SCHEMA_REGISTRY_URL}
    "auto.offset.reset": ${?KAFKA_AUTO_OFFSET_RESET}
  }
}

grafanaUrl: "/grafana"
grafanaUrl: ${?GRAFANA_URL}

metricsSettings {
  url: ${grafanaUrl}"/d/$dashboard?theme=dark&var-scenarioName=$scenarioName&var-env="${environment}
  defaultDashboard: "nussknacker-scenario"
  defaultDashboard: ${?DEFAULT_DASHBOARD}
  scenarioTypeToDashboard: {
    "streaming-lite-embedded": "nussknacker-lite-scenario",
    "request-response-embedded": "nussknacker-request-response-scenario"
  }
}

countsSettings {
  influxUrl: ${?INFLUXDB_URL}/"query"
  database: "esp"
}
