# This config is exposed in development dist and locally in development (se ui/server/runServer.sh)

base: { include "base-application.conf" }

//to be consistent with docker/demo
environment: "demo"

categoriesConfig: {
  "FraudDetection": "streaming-demo",
  "Recommendations": "streaming-demo",
  "Default": "streaming-generic"
  "Category1": "streaming"
  "Category2": "streaming"
  "DemoFeatures": "streaming"
  "ServerRestApi": "request-response"
}

managementModelDir: "model"
managementModelDir: ${?MANAGEMENT_MODEL_DIR}
genericModelDir: "model"
genericModelDir: ${?GENERIC_MODEL_DIR}
demoModelDir: "model"
demoModelDir: ${?DEMO_MODEL_DIR}
standaloneModelDir: "model"
standaloneModelDir: ${?STANDALONE_MODEL_DIR}

standaloneManagmentUrl: "http://localhost:8070"
standaloneManagmentUrl: ${?STANDALONE_MANAGMENT_URL}

processTypes {
  "streaming": {
    engineConfig: ${base.flinkEngineConfig}
    modelConfig: {
      classPath: [ ${managementModelDir}"/managementSample.jar" ]
    }
  }
 "streaming-generic": {
    engineConfig: ${base.flinkEngineConfig}
    modelConfig: {
      classPath: [ ${genericModelDir}"/genericModel.jar" ]
    }
  }
  "streaming-demo": {
    engineConfig: ${base.flinkEngineConfig}
    modelConfig: {
      classPath: [ ${demoModelDir}"/demoModel.jar" ]
    }
  }
  "request-response": {
    engineConfig {
      type: "requestResponseStandalone"
      managementUrl: ${standaloneManagmentUrl}
    }
    modelConfig {
      classPath: [ ${standaloneModelDir}"/standaloneSample.jar" ]
    }
  }
}

metricsSettings {
  url: ${base.grafanaUrl}"/dashboard/db/$dashboard?theme=dark&var-processName=$process&var-env="${environment}
  defaultDashboard: "flink-esp"
  processingTypeToDashboard: {
    "streaming": "flink-esp"
    #Note: currently in demo docker-compose these dashboards do not exist. We keep them here, so
    #one can test if changing dashboard link works, you can add other dashboards locally
    "streaming-generic": "flink-generic"
    "streaming-demo": "flink-demo"
    "request-response": "flink-standalone"
  }
}

environmentAlert: {
  content: "DEVELOPMENT ENVIRONMENT"
  cssClass: "indicator-green"
}

customTabs = [
  {name: "Metrics", url: ${base.grafanaUrl}"/dashboard/db/"${metricsSettings.defaultDashboard}"?theme=dark&var-env="${environment}, id: "metrics"},
]

secondaryEnvironmentUri: "http://localhost:8080/api"
secondaryEnvironmentUri: ${?SECONADRY_ENVIRONMENT_URI}

secondaryEnvironment {
  user: "admin"
  password: "admin"
  targetEnvironmentId: "development"
  remoteConfig: {
    uri: ${secondaryEnvironmentUri}
    batchSize: 10
  }
}

standaloneEngineProcessLocation: ${base.storageDir}"/standaloneProcesses"

customProcesses: {
  "customProcess1": "pl.touk.custom.NonExistingCustomProcess"
}

# TODO: lightbend config can't include files on root level - move nussknacker config on nk level and get rid of this below
jdbcServer: ${base.jdbcServer}
db: ${base.db}

commentSettings: ${base.commentSettings}
attachmentsPath: ${base.attachmentsPath}
countsSettings: ${base.countsSettings}
