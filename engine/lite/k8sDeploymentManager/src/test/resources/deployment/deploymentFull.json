{
  "kind": "Deployment",
  "apiVersion": "apps/v1",
  "metadata": {
    "name": "scenario-1234-foo-scenario-x",
    "labels": {
      "nussknacker.io/scenarioName": "foo-scenario-x-68eec66038",
      "nussknacker.io/scenarioId": "1234",
      "nussknacker.io/scenarioVersion": "11"
    },
    "annotations": {
      "nussknacker.io/scenarioVersion": "{\n  \"versionId\" : 11,\n  \"processName\" : \"foo scenario â˜ \",\n  \"processId\" : 1234,\n  \"user\" : \"testUser\",\n  \"modelVersion\" : 22\n}"
    }
  },
  "spec": {
    "replicas": 1,
    "selector": {
      "matchLabels": {
        "nussknacker.io/scenarioId": "1234",
        "nussknacker.io/label1": "1234"
      }
    },
    "template": {
      "metadata": {
        "name": "scenario-1234-foo-scenario-x",
        "labels": {
          "nussknacker.io/scenarioName": "foo-scenario-x-68eec66038",
          "nussknacker.io/scenarioId": "1234",
          "nussknacker.io/scenarioVersion": "11"
        }
      },
      "spec": {
        "containers": [
          {
            "name": "runtime",
            "image": "touk/nussknacker-lite-kafka-runtime:1.2.0-SNAPSHOT",
            "env": [
              {
                "name": "SCENARIO_FILE",
                "value": "/data/scenario.json"
              },
              {
                "name": "CONFIG_FILE",
                "value": "/opt/nussknacker/conf/application.conf,/data/modelConfig.conf"
              },
              {
                "name": "POD_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "fieldPath": "metadata.name"
                  }
                }
              }
            ],
            "volumeMounts": [
              {
                "name": "configmap",
                "mountPath": "/data"
              }
            ],
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "volumes": [
          {
            "name": "configmap",
            "configMap": {
              "name": "scenario-1234-foo-scenario-x-4f75e90f78"
            }
          }
        ],
        "restartPolicy": "Always",
        "dnsPolicy": "ClusterFirst"
      }
    },
    "strategy": {
      "type": "Recreate"
    },
    "minReadySeconds": 10
  }
}