{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "rdb-simpledb REST API",
    "description": "**restdb.io Swagger documentation**"
  },
  "host": "rdb-simpledb.restdb.io",
  "basePath": "/rest",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "apikey": {
      "type": "apiKey",
      "name": "x-apikey",
      "in": "header",
      "description": "Requests should pass an x-apikey header."
    },
    "apikey2": {
      "type": "apiKey",
      "name": "x-apikey-2",
      "in": "header",
      "description": "Requests should pass an x-apikey header."
    }
  },
  "security": [
    {
      "apikey": []
    },
    {
      "apikey2": []
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [{
    "name": "companies",
    "description": "Companies we do business with",
    "externalDocs": {
      "description": "Docs",
      "url": "http://restdb.io/docs"
    }
  },
    {
      "name": "contact",
      "description": "People we must follow up closely",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "people",
      "description": "",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "users",
      "description": "Users of this application, both external and internal",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "product",
      "description": "The stuff we make for our customers",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "offers",
      "description": "Offers sent to customers",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "selskaper",
      "description": "",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "useraccounts",
      "description": "",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "issuetracking",
      "description": "Problems related to customers / products",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "passengers",
      "description": "",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "leads",
      "description": "All our sales leads",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "chat",
      "description": "",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "stuff",
      "description": "",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "cars",
      "description": "vroom",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "issue",
      "description": "Requests from customers",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "players",
      "description": "Game participants",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "mailtrigger",
      "description": "dds",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "myfood",
      "description": "",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    },
    {
      "name": "people2",
      "description": "",
      "externalDocs": {
        "description": "Docs",
        "url": "http://restdb.io/docs"
      }
    }

  ],
  "paths": {
    "/companies": {
      "get": {
        "summary": "Get many companies documents. All or by query",
        "description": "",
        "tags": ["companies"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/companies"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new companies document",
        "description": "",
        "tags": ["companies"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/companies"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/companies"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/companies/{objectid}": {
      "get": {
        "summary": "Get one companies document by _id",
        "description": "",
        "tags": ["companies"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/companies"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a companies document by _id",
        "description": "",
        "tags": ["companies"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/companies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a companies document",
        "description": "",
        "tags": ["companies"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/companies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a companies document by _id",
        "description": "",
        "tags": ["companies"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/companies/*": {
      "delete": {
        "summary": "Delete many companies documents by query",
        "description": "",
        "tags": ["companies"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/contact": {
      "get": {
        "summary": "Get many contact documents. All or by query",
        "description": "",
        "tags": ["contact"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contact"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new contact document",
        "description": "",
        "tags": ["contact"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/contact"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/contact"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/contact/{objectid}": {
      "get": {
        "summary": "Get one contact document by _id",
        "description": "",
        "tags": ["contact"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contact"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a contact document by _id",
        "description": "",
        "tags": ["contact"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a contact document",
        "description": "",
        "tags": ["contact"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a contact document by _id",
        "description": "",
        "tags": ["contact"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/contact/{objectid}/issues": {
      "get": {
        "summary": "Get list of documents from subcollection issue",
        "description": "",
        "tags": ["contact"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/issue"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "post": {
        "summary": "Create a new child document in subcollection issue",
        "description": "",
        "tags": ["contact"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/issue"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      }
    },
    "/contact/{objectid}/issues/{subobjectid}": {
      "get": {
        "summary": "Get one document from subcollection issue",
        "description": "",
        "tags": ["contact"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "subobjectid",
            "in": "path",
            "description": "Unique child ObjectID",
            "required": true,
            "type": "string"
          },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/issue"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      }
    },
    "/contact/*": {
      "delete": {
        "summary": "Delete many contact documents by query",
        "description": "",
        "tags": ["contact"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/people": {
      "get": {
        "summary": "Get many people documents. All or by query",
        "description": "",
        "tags": ["people"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/people"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new people document",
        "description": "",
        "tags": ["people"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/people"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/people"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/people/{objectid}": {
      "get": {
        "summary": "Get one people document by _id",
        "description": "",
        "tags": ["people"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/people"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a people document by _id",
        "description": "",
        "tags": ["people"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/people"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a people document",
        "description": "",
        "tags": ["people"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/people"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a people document by _id",
        "description": "",
        "tags": ["people"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/people/*": {
      "delete": {
        "summary": "Delete many people documents by query",
        "description": "",
        "tags": ["people"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get many users documents. All or by query",
        "description": "",
        "tags": ["users"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new users document",
        "description": "",
        "tags": ["users"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/users"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/users"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/users/{objectid}": {
      "get": {
        "summary": "Get one users document by _id",
        "description": "",
        "tags": ["users"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/users"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a users document by _id",
        "description": "",
        "tags": ["users"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a users document",
        "description": "",
        "tags": ["users"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a users document by _id",
        "description": "",
        "tags": ["users"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/users/*": {
      "delete": {
        "summary": "Delete many users documents by query",
        "description": "",
        "tags": ["users"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/product": {
      "get": {
        "summary": "Get many product documents. All or by query",
        "description": "",
        "tags": ["product"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new product document",
        "description": "",
        "tags": ["product"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/product"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/product"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/product/{objectid}": {
      "get": {
        "summary": "Get one product document by _id",
        "description": "",
        "tags": ["product"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a product document by _id",
        "description": "",
        "tags": ["product"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a product document",
        "description": "",
        "tags": ["product"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a product document by _id",
        "description": "",
        "tags": ["product"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/product/{objectid}/customerissues": {
      "get": {
        "summary": "Get list of documents from subcollection issue-tracking",
        "description": "",
        "tags": ["product"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/issuetracking"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "post": {
        "summary": "Create a new child document in subcollection issue-tracking",
        "description": "",
        "tags": ["product"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/issuetracking"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      }
    },
    "/product/{objectid}/customerissues/{subobjectid}": {
      "get": {
        "summary": "Get one document from subcollection issue-tracking",
        "description": "",
        "tags": ["product"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "subobjectid",
            "in": "path",
            "description": "Unique child ObjectID",
            "required": true,
            "type": "string"
          },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/issuetracking"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      }
    },
    "/product/*": {
      "delete": {
        "summary": "Delete many product documents by query",
        "description": "",
        "tags": ["product"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/offers": {
      "get": {
        "summary": "Get many offers documents. All or by query",
        "description": "",
        "tags": ["offers"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/offers"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new offers document",
        "description": "",
        "tags": ["offers"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/offers"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/offers"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/offers/{objectid}": {
      "get": {
        "summary": "Get one offers document by _id",
        "description": "",
        "tags": ["offers"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/offers"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a offers document by _id",
        "description": "",
        "tags": ["offers"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/offers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a offers document",
        "description": "",
        "tags": ["offers"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/offers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a offers document by _id",
        "description": "",
        "tags": ["offers"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/offers/*": {
      "delete": {
        "summary": "Delete many offers documents by query",
        "description": "",
        "tags": ["offers"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/selskaper": {
      "get": {
        "summary": "Get many selskaper documents. All or by query",
        "description": "",
        "tags": ["selskaper"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/selskaper"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new selskaper document",
        "description": "",
        "tags": ["selskaper"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/selskaper"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/selskaper"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/selskaper/{objectid}": {
      "get": {
        "summary": "Get one selskaper document by _id",
        "description": "",
        "tags": ["selskaper"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/selskaper"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a selskaper document by _id",
        "description": "",
        "tags": ["selskaper"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/selskaper"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a selskaper document",
        "description": "",
        "tags": ["selskaper"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/selskaper"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a selskaper document by _id",
        "description": "",
        "tags": ["selskaper"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/selskaper/{objectid}/produktliste": {
      "get": {
        "summary": "Get list of documents from subcollection product",
        "description": "",
        "tags": ["selskaper"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "post": {
        "summary": "Create a new child document in subcollection product",
        "description": "",
        "tags": ["selskaper"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      }
    },
    "/selskaper/{objectid}/produktliste/{subobjectid}": {
      "get": {
        "summary": "Get one document from subcollection product",
        "description": "",
        "tags": ["selskaper"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "subobjectid",
            "in": "path",
            "description": "Unique child ObjectID",
            "required": true,
            "type": "string"
          },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/product"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      }
    },
    "/selskaper/*": {
      "delete": {
        "summary": "Delete many selskaper documents by query",
        "description": "",
        "tags": ["selskaper"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/useraccounts": {
      "get": {
        "summary": "Get many useraccounts documents. All or by query",
        "description": "",
        "tags": ["useraccounts"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/useraccounts"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new useraccounts document",
        "description": "",
        "tags": ["useraccounts"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/useraccounts"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/useraccounts"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/useraccounts/{objectid}": {
      "get": {
        "summary": "Get one useraccounts document by _id",
        "description": "",
        "tags": ["useraccounts"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/useraccounts"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a useraccounts document by _id",
        "description": "",
        "tags": ["useraccounts"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/useraccounts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a useraccounts document",
        "description": "",
        "tags": ["useraccounts"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/useraccounts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a useraccounts document by _id",
        "description": "",
        "tags": ["useraccounts"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/useraccounts/*": {
      "delete": {
        "summary": "Delete many useraccounts documents by query",
        "description": "",
        "tags": ["useraccounts"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/issuetracking": {
      "get": {
        "summary": "Get many issue-tracking documents. All or by query",
        "description": "",
        "tags": ["issue-tracking"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/issuetracking"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new issue-tracking document",
        "description": "",
        "tags": ["issue-tracking"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/issuetracking"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/issuetracking"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/issuetracking/{objectid}": {
      "get": {
        "summary": "Get one issue-tracking document by _id",
        "description": "",
        "tags": ["issue-tracking"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/issuetracking"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a issue-tracking document by _id",
        "description": "",
        "tags": ["issue-tracking"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/issuetracking"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a issue-tracking document",
        "description": "",
        "tags": ["issue-tracking"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/issuetracking"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a issue-tracking document by _id",
        "description": "",
        "tags": ["issue-tracking"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/issuetracking/*": {
      "delete": {
        "summary": "Delete many issue-tracking documents by query",
        "description": "",
        "tags": ["issue-tracking"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/passengers": {
      "get": {
        "summary": "Get many passengers documents. All or by query",
        "description": "",
        "tags": ["passengers"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/passengers"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new passengers document",
        "description": "",
        "tags": ["passengers"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/passengers"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/passengers"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/passengers/{objectid}": {
      "get": {
        "summary": "Get one passengers document by _id",
        "description": "",
        "tags": ["passengers"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/passengers"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a passengers document by _id",
        "description": "",
        "tags": ["passengers"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/passengers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a passengers document",
        "description": "",
        "tags": ["passengers"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/passengers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a passengers document by _id",
        "description": "",
        "tags": ["passengers"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/passengers/*": {
      "delete": {
        "summary": "Delete many passengers documents by query",
        "description": "",
        "tags": ["passengers"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/leads": {
      "get": {
        "summary": "Get many leads documents. All or by query",
        "description": "",
        "tags": ["leads"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/leads"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new leads document",
        "description": "",
        "tags": ["leads"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/leads"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/leads"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/leads/{objectid}": {
      "get": {
        "summary": "Get one leads document by _id",
        "description": "",
        "tags": ["leads"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/leads"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a leads document by _id",
        "description": "",
        "tags": ["leads"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/leads"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a leads document",
        "description": "",
        "tags": ["leads"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/leads"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a leads document by _id",
        "description": "",
        "tags": ["leads"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/leads/*": {
      "delete": {
        "summary": "Delete many leads documents by query",
        "description": "",
        "tags": ["leads"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/chat": {
      "get": {
        "summary": "Get many chat documents. All or by query",
        "description": "",
        "tags": ["chat"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/chat"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new chat document",
        "description": "",
        "tags": ["chat"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/chat"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/chat"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/chat/{objectid}": {
      "get": {
        "summary": "Get one chat document by _id",
        "description": "",
        "tags": ["chat"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/chat"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a chat document by _id",
        "description": "",
        "tags": ["chat"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a chat document",
        "description": "",
        "tags": ["chat"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a chat document by _id",
        "description": "",
        "tags": ["chat"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/chat/*": {
      "delete": {
        "summary": "Delete many chat documents by query",
        "description": "",
        "tags": ["chat"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/stuff": {
      "get": {
        "summary": "Get many stuff documents. All or by query",
        "description": "",
        "tags": ["stuff"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/stuff"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new stuff document",
        "description": "",
        "tags": ["stuff"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/stuff"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/stuff"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/stuff/{objectid}": {
      "get": {
        "summary": "Get one stuff document by _id",
        "description": "",
        "tags": ["stuff"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/stuff"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a stuff document by _id",
        "description": "",
        "tags": ["stuff"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stuff"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a stuff document",
        "description": "",
        "tags": ["stuff"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stuff"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a stuff document by _id",
        "description": "",
        "tags": ["stuff"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/stuff/*": {
      "delete": {
        "summary": "Delete many stuff documents by query",
        "description": "",
        "tags": ["stuff"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/cars": {
      "get": {
        "summary": "Get many cars documents. All or by query",
        "description": "",
        "tags": ["cars"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cars"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new cars document",
        "description": "",
        "tags": ["cars"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/cars"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/cars"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/cars/{objectid}": {
      "get": {
        "summary": "Get one cars document by _id",
        "description": "",
        "tags": ["cars"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cars"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a cars document by _id",
        "description": "",
        "tags": ["cars"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cars"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a cars document",
        "description": "",
        "tags": ["cars"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cars"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a cars document by _id",
        "description": "",
        "tags": ["cars"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/cars/*": {
      "delete": {
        "summary": "Delete many cars documents by query",
        "description": "",
        "tags": ["cars"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/issue": {
      "get": {
        "summary": "Get many issue documents. All or by query",
        "description": "",
        "tags": ["issue"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/issue"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new issue document",
        "description": "",
        "tags": ["issue"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/issue"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/issue"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/issue/{objectid}": {
      "get": {
        "summary": "Get one issue document by _id",
        "description": "",
        "tags": ["issue"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/issue"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a issue document by _id",
        "description": "",
        "tags": ["issue"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/issue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a issue document",
        "description": "",
        "tags": ["issue"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/issue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a issue document by _id",
        "description": "",
        "tags": ["issue"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/issue/*": {
      "delete": {
        "summary": "Delete many issue documents by query",
        "description": "",
        "tags": ["issue"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/players": {
      "get": {
        "summary": "Get many players documents. All or by query",
        "description": "",
        "tags": ["players"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/players"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new players document",
        "description": "",
        "tags": ["players"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/players"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/players"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/players/{objectid}": {
      "get": {
        "summary": "Get one players document by _id",
        "description": "",
        "tags": ["players"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/players"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a players document by _id",
        "description": "",
        "tags": ["players"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/players"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a players document",
        "description": "",
        "tags": ["players"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/players"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a players document by _id",
        "description": "",
        "tags": ["players"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/players/*": {
      "delete": {
        "summary": "Delete many players documents by query",
        "description": "",
        "tags": ["players"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/mailtrigger": {
      "get": {
        "summary": "Get many mailtrigger documents. All or by query",
        "description": "",
        "tags": ["mailtrigger"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/mailtrigger"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new mailtrigger document",
        "description": "",
        "tags": ["mailtrigger"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/mailtrigger"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/mailtrigger"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/mailtrigger/{objectid}": {
      "get": {
        "summary": "Get one mailtrigger document by _id",
        "description": "",
        "tags": ["mailtrigger"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/mailtrigger"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a mailtrigger document by _id",
        "description": "",
        "tags": ["mailtrigger"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/mailtrigger"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a mailtrigger document",
        "description": "",
        "tags": ["mailtrigger"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/mailtrigger"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a mailtrigger document by _id",
        "description": "",
        "tags": ["mailtrigger"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/mailtrigger/*": {
      "delete": {
        "summary": "Delete many mailtrigger documents by query",
        "description": "",
        "tags": ["mailtrigger"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/myfood": {
      "get": {
        "summary": "Get many myfood documents. All or by query",
        "description": "",
        "tags": ["myfood"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/myfood"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new myfood document",
        "description": "",
        "tags": ["myfood"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/myfood"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/myfood"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/myfood/{objectid}": {
      "get": {
        "summary": "Get one myfood document by _id",
        "description": "",
        "tags": ["myfood"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/myfood"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a myfood document by _id",
        "description": "",
        "tags": ["myfood"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/myfood"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a myfood document",
        "description": "",
        "tags": ["myfood"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/myfood"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a myfood document by _id",
        "description": "",
        "tags": ["myfood"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/myfood/*": {
      "delete": {
        "summary": "Delete many myfood documents by query",
        "description": "",
        "tags": ["myfood"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    },
    "/people2": {
      "get": {
        "summary": "Get many people2 documents. All or by query",
        "description": "",
        "tags": ["people2"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "Optional database query object. q={\"field\":\"val\"}",
          "required": false
        },
          {
            "name": "h",
            "in": "query",
            "type": "string",
            "description": "Optional database query hint. h={\"$max\":1}",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/people2"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new people2 document",
        "description": "",
        "tags": ["people2"],
        "parameters": [{
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/people2"
          }
        }],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/people2"
            }
          },
          "400": {
            "description": "Validation error"
          }
        }
      }

    },
    "/people2/{objectid}": {
      "get": {
        "summary": "Get one people2 document by _id",
        "description": "",
        "tags": ["people2"],

        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "h",
            "in": "query",
            "description": "Optional database query hint",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/people2"
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "put": {
        "summary": "Update a people2 document by _id",
        "description": "",
        "tags": ["people2"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/people2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "patch": {
        "summary": "Update field on a people2 document",
        "description": "",
        "tags": ["people2"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/people2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modified ok"
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Document not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a people2 document by _id",
        "description": "",
        "tags": ["people2"],
        "parameters": [{
          "name": "objectid",
          "in": "path",
          "description": "Unique ObjectID",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          },
          "404": {
            "description": "Document not found"
          }
        }
      }

    },
    "/people2/*": {
      "delete": {
        "summary": "Delete many people2 documents by query",
        "description": "",
        "tags": ["people2"],
        "parameters": [{
          "name": "q",
          "in": "query",
          "type": "string",
          "description": "",
          "required": true
        }],
        "responses": {
          "200": {
            "description": "Deleted ok"
          }
        }
      }
    }

  },
  "definitions": {
    "companies": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "address": {
          "type": "string",
          "description": " "

        },

        "city": {
          "type": "string",
          "description": " "

        },

        "zip": {
          "type": "string",
          "description": " "

        },

        "logo": {
          "description": " (array of media ObjectIDs)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contact": {
          "description": " (array of contact documents or ObjectIDs)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/contact"
          }
        }

      ,

        "category": {
          "type": "string",
          "description": " "

        },

        "name": {
          "type": "string",
          "description": " (must be unique)"

        }

      }
    },
    "contact": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "first-name": {
          "type": "string",
          "description": " "

        },

        "last-name": {
          "type": "string",
          "description": " "

        },

        "email": {
          "type": "string",
          "description": " "

        },

        "photo": {
          "description": " (array of media ObjectIDs)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },

        "issues": {
          "description": " (array of child document ObjectIDs. Empty by default)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },

        "comment": {
          "type": "string",
          "description": " "

        }

      }
    },
    "people": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "Firstname": {
          "type": "string",
          "description": " "

        },

        "Lastname": {
          "type": "string",
          "description": " "

        },

        "Email": {
          "type": "string",
          "description": " "

        }

      }
    },
    "users": {
      "type": "object",
      "required": ["username"],
      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "username": {
          "type": "string",
          "description": "email address (created by system) (must be unique)"

        },

        "roles": {
          "type": "string",
          "description": "array of roles and permissions (created by system) "

        },

        "properties": {
          "type": "string",
          "description": "for other data (created by system) "

        },

        "type": {
          "type": "string",
          "description": "type of user (created by system) "

        },

        "organisation": {
          "type": "string",
          "description": "optional (created by system) "

        },

        "interesser": {
          "type": "string",
          "description": " "

        }

      }
    },
    "product": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "name": {
          "type": "string",
          "description": " "

        },

        "serialno": {
          "type": "string",
          "description": " "

        },

        "price": {
          "type": "string",
          "description": " "

        },

        "description": {
          "type": "string",
          "description": " "

        },

        "customer-issues": {
          "description": " (array of child document ObjectIDs. Empty by default)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },

        "photos": {
          "description": "450px photos (array of media ObjectIDs)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contact": {
          "description": "internal company contact (array of contact documents or ObjectIDs)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/contact"
          }
        }

      ,

        "instock": {
          "type": "integer",
          "description": " "

        }

      }
    },
    "offers": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "title": {
          "type": "string",
          "description": " "

        },
        "product": {
          "description": " (array of product documents or ObjectIDs)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/product"
          }
        }

      ,
        "customer": {
          "description": " (array of companies documents or ObjectIDs)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/companies"
          }
        }

      ,

        "priceincvat": {
          "type": "string",
          "description": " "

        },

        "quantity": {
          "type": "integer",
          "description": " "

        },

        "unitprice": {
          "type": "string",
          "description": " "

        },

        "price": {
          "type": "string",
          "description": " "

        }

      }
    },
    "selskaper": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "name": {
          "type": "string",
          "description": " "

        },

        "address": {
          "type": "string",
          "description": " "

        },

        "city": {
          "type": "string",
          "description": " "

        },

        "zip": {
          "type": "string",
          "description": " "

        },

        "produktliste": {
          "description": " (array of child document ObjectIDs. Empty by default)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }

      }
    },
    "useraccounts": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "userid": {
          "type": "integer",
          "description": " "

        },

        "username": {
          "type": "string",
          "description": " "

        }

      }
    },
    "issuetracking": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "title": {
          "type": "string",
          "description": " "

        },

        "description": {
          "type": "string",
          "description": " "

        }

      }
    },
    "passengers": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "PassengerId": {
          "type": "integer",
          "description": "Created by import "

        },

        "Survived": {
          "type": "integer",
          "description": "Created by import "

        },

        "Pclass": {
          "type": "integer",
          "description": "Created by import "

        },

        "Name": {
          "type": "string",
          "description": "Created by import "

        },

        "Sex": {
          "type": "string",
          "description": "Created by import "

        },

        "Age": {
          "type": "integer",
          "description": "Created by import "

        },

        "SibSp": {
          "type": "integer",
          "description": "Created by import "

        },

        "Parch": {
          "type": "integer",
          "description": "Created by import "

        },

        "Ticket": {
          "type": "string",
          "description": "Created by import "

        },

        "Fare": {
          "type": "number",
          "description": "Created by import "

        },

        "Cabin": {
          "type": "string",
          "description": "Created by import "

        },

        "Embarked": {
          "type": "string",
          "description": "Created by import "

        }

      }
    },
    "leads": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "description": {
          "type": "string",
          "description": " "

        },
        "customer": {
          "description": " (array of companies documents or ObjectIDs)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/companies"
          }
        }

      ,

        "hour-estimate": {
          "type": "string",
          "description": " "

        },

        "hour-price": {
          "type": "string",
          "description": " "

        },

        "total-value": {
          "type": "string",
          "description": " "

        }

      }
    },
    "chat": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "oneliner": {
          "type": "string",
          "description": " "

        }

      }
    },
    "stuff": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "payload": {
          "type": "string",
          "description": " "

        },

        "name": {
          "type": "string",
          "description": " "

        }

      }
    },
    "cars": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "make": {
          "type": "string",
          "description": " "

        },

        "model": {
          "type": "string",
          "description": " "

        },

        "variant": {
          "type": "string",
          "description": " "

        },

        "powersrc": {
          "type": "string",
          "description": " "

        },

        "photo": {
          "description": " (array of media ObjectIDs)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maker": {
          "description": " (array of companies documents or ObjectIDs)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/companies"
          }
        }

      ,

        "comments": {
          "type": "string",
          "description": " "

        },

        "when": {
          "type": "string",
          "description": " "

        }

      }
    },
    "issue": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "title": {
          "type": "string",
          "description": " "

        },

        "description": {
          "type": "string",
          "description": " "

        },

        "followup": {
          "type": "string",
          "description": " "

        }

      }
    },
    "players": {
      "type": "object",
      "required": ["alive"],
      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "name": {
          "type": "string",
          "description": " "

        },

        "email": {
          "type": "string",
          "description": " "

        },

        "score": {
          "type": "integer",
          "description": " "

        },

        "category": {
          "type": "string",
          "description": " "

        },

        "team": {
          "type": "string",
          "description": " "

        },

        "registered": {
          "type": "string",
          "description": " "

        },

        "alive": {
          "type": "boolean",
          "description": " "

        }

      }
    },
    "mailtrigger": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "email": {
          "type": "string",
          "description": " "

        },

        "text": {
          "type": "string",
          "description": " "

        },

        "name": {
          "type": "string",
          "description": " "

        }

      }
    },
    "myfood": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "category-id": {
          "type": "integer",
          "description": "Created by import "

        },

        "food-id": {
          "type": "integer",
          "description": "Created by import "

        },

        "food0name": {
          "type": "string",
          "description": "Created by import "

        },

        "wastage-rate": {
          "type": "integer",
          "description": "Created by import "

        },

        "energy-kcal": {
          "type": "integer",
          "description": "Created by import "

        },

        "energy-kj": {
          "type": "integer",
          "description": "Created by import "

        },

        "water": {
          "type": "number",
          "description": "Created by import "

        },

        "protein": {
          "type": "number",
          "description": "Created by import "

        },

        "protein-amino-acid": {
          "type": "number",
          "description": "Created by import "

        },

        "fat": {
          "type": "integer",
          "description": "Created by import "

        },

        "triacylglycerol-equivalent": {
          "type": "integer",
          "description": "Created by import "

        },

        "saturated-fatty-acid": {
          "type": "number",
          "description": "Created by import "

        },

        "monosaturated-fatty-acid": {
          "type": "number",
          "description": "Created by import "

        },

        "polysaturated-fatty-acid": {
          "type": "number",
          "description": "Created by import "

        },

        "cholesterol": {
          "type": "integer",
          "description": "Created by import "

        },

        "carbohydrate": {
          "type": "number",
          "description": "Created by import "

        },

        "monosaccharide equivalent": {
          "type": "number",
          "description": "Created by import "

        },

        "soluble-fiber": {
          "type": "number",
          "description": "Created by import "

        },

        "insoluble-fiber": {
          "type": "number",
          "description": "Created by import "

        },

        "total-fiber": {
          "type": "number",
          "description": "Created by import "

        },

        "ash": {
          "type": "number",
          "description": "Created by import "

        },

        "sodium": {
          "type": "integer",
          "description": "Created by import "

        },

        "potassium": {
          "type": "integer",
          "description": "Created by import "

        },

        "calcium": {
          "type": "integer",
          "description": "Created by import "

        },

        "magnesium": {
          "type": "integer",
          "description": "Created by import "

        },

        "phosphorus": {
          "type": "integer",
          "description": "Created by import "

        },

        "iron": {
          "type": "number",
          "description": "Created by import "

        },

        "zinc": {
          "type": "number",
          "description": "Created by import "

        },

        "copper": {
          "type": "number",
          "description": "Created by import "

        },

        "manganese": {
          "type": "number",
          "description": "Created by import "

        },

        "iodine": {
          "type": "integer",
          "description": "Created by import "

        },

        "selenium": {
          "type": "integer",
          "description": "Created by import "

        },

        "chronium": {
          "type": "integer",
          "description": "Created by import "

        },

        "molybdenum": {
          "type": "integer",
          "description": "Created by import "

        },

        "retinol": {
          "type": "integer",
          "description": "Created by import "

        },

        "α-carotene": {
          "type": "integer",
          "description": "Created by import "

        }

      }
    },
    "people2": {
      "type": "object",

      "properties": {
        "_id": {
          "type": "string",
          "description": "System generated ObjectID"

        },

        "Firstname": {
          "type": "string",
          "description": " "

        },

        "Lastname": {
          "type": "string",
          "description": " "

        },

        "Email": {
          "type": "string",
          "description": " "

        }

      }
    }

  }
}