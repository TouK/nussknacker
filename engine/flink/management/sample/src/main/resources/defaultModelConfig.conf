documentationBase: "http://dummy.com"

globalParameters {
  useLegacyMetrics: false
}

restartStrategy {
  default {
    strategy: disable
  }
}

exceptionHandler {
  type: BrieflyLogging
  withRateMeter: true
}

nodes: {
  enricher: {
    params {
      param {
        defaultValue: "'default value'"
        editor: {
          type: "StringParameterEditor"
        }
      }
    }
    icon: "Filter.svg",
    docsUrl: ${documentationBase}"enricher"
  },
  test1: {
    icon: "Sink.svg"
  }
  filter: {
    docsUrl: ${documentationBase}"filter"
  }
  testSub: {
    params {
      stringParam: {
        editor: {
          type: "StringParameterEditor"
        }
      }
    }
  }
  providedComponent-component-v1 {
    docsUrl: "https://nussknacker.io/Configuration.html"
  }

}

components {
  dynamicTest: {
    categories: ["DemoFeatures"]
    componentPrefix: "providedComponent-"
    valueCount: 3
  }
}


additionalPropertiesConfig {
  environment: {
    editor: {
      type: "StringParameterEditor"
    }
    validators: [
      {
        type: "MandatoryParameterValidator"
      }
    ]
    label: "Environment"
    defaultValue: "test"
  }
  maxEvents: {
    label: "Max events"
    editor: {
      type: "StringParameterEditor"
    }
    validators: [
      {
        type: "LiteralIntegerValidator"
      }
    ]
  }
  numberOfThreads: {
    label: "Number of threads"
    editor: {
      type: "FixedValuesParameterEditor",
      possibleValues: [
        {"label": "1", "expression": "1"},
        {"label": "2", "expression": "2"}
      ]
    }
    defaultValue: "1"
  }
}

signalsTopic: "nk.signals"
signalsTopic: ${?SIGNALS_TOPIC}

kafkaAddress: "kafka:9092"
kafkaAddress: ${?KAFKA_ADDRESS}

// TODO: This won't work when nk is run outside container, it should be possible to add additional url
schemaRegistryUrl: "http://schemaregistry:8081"
schemaRegistryUrl: ${?SCHEMA_REGISTRY_URL}

signals {
  topic: ${signalsTopic}
}

timeout: 10s
delayBetweenAttempts: 10s
checkpointConfig {
  checkpointInterval: 10m
}

kafka {
  kafkaAddress: ${kafkaAddress}
  kafkaProperties {
    "schema.registry.url": ${schemaRegistryUrl}
  }
  consumerGroupNamingStrategy: processId-nodeId
  avroKryoGenericRecordSchemaIdSerialization: true
}

asyncExecutionConfig {
  bufferSize: 200
  workers: 8
  defaultUseAsyncInterpretation: true
}


