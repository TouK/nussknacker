{

  signals {
    topic: "nk.signals"
    topic: ${?SIGNALS_TOPIC}
  }

  timeout: 10s
  delayBetweenAttempts: 10s
  checkpointConfig {
      checkpointInterval: 10m
  }

  globalParameters {
    explicitUidInStatefulOperators: true
  }

  kafka {
    kafkaAddress: "kafka:9092"
    kafkaAddress: ${?KAFKA_ADDRESS}
    kafkaProperties {
      // TODO: This won't work when nk is run outside container, it should be possible to add additional url
      "schema.registry.url": "http://schemaregistry:8081"
      "schema.registry.url": ${?SCHEMA_REGISTRY_URL}
    }
    consumerGroupNamingStrategy: processId-nodeId
    avroKryoGenericRecordSchemaIdSerialization: true
  }

  asyncExecutionConfig {
    bufferSize: 200
    workers: 8
    defaultUseAsyncInterpretation: true
  }

  nodes: {
    "$properties": {
      docsUrl: "https://nussknacker.io/DesigningProcesses.html#global-process-properties"
    }
    aggregate: {
      docsUrl: "https://nussknacker.io/designingProcesses/FlinkCustomTransformers.html#aggregate"
    },
    aggregate-tumbling: {
      docsUrl: "https://nussknacker.io/designingProcesses/FlinkCustomTransformers.html#aggregatetumbling"
    },
    union: {
      docsUrl: "https://nussknacker.io/designingProcesses/FlinkCustomTransformers.html#union"
    }
    previousValue: {
      docsUrl: "https://nussknacker.io/designingProcesses/FlinkCustomTransformers.html#previousvalue"
    }
  }
}
