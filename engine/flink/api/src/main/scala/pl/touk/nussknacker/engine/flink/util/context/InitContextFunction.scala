package pl.touk.nussknacker.engine.flink.util.context

import org.apache.flink.api.common.functions.RichMapFunction
import org.apache.flink.configuration.Configuration
import pl.touk.nussknacker.engine.api.{Context, VariableConstants}

/**
  * Maps raw source event to Context where default "input" variable represents the event.
  *
  * @param processId - id of the process or flink job, used to setup name of created Context
  * @param taskName - name of the task within the process or flink job, used to setup name of created Context
  * @tparam T - type of event that is generated by raw source
  */
case class InitContextFunction[T](processId: String, taskName: String) extends RichMapFunction[T, Context] with ContextInitializingFunction {

  override def open(parameters: Configuration): Unit = {
    init(getRuntimeContext)
  }

  override def map(input: T): Context = newContext.withVariable(VariableConstants.InputVariableName, input)
}
