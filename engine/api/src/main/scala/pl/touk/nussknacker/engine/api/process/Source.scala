package pl.touk.nussknacker.engine.api.process

import pl.touk.nussknacker.engine.api.test.TestDataParser

/**
  * Common trait for source of events. For Flink see pl.touk.nussknacker.engine.flink.api.process.FlinkSource
 *
  * @tparam T - type of event that is generated by this source. This is needed to handle e.g. syntax suggestions in UI
  */
trait Source[+T] {

}

trait TestDataParserProvider[+T] { self: Source[T] =>
  def testDataParser: TestDataParser[T]
}

trait TestDataGenerator { self: Source[_] =>
  def generateTestData(size: Int) : Array[Byte]
}


/**
  * [[pl.touk.nussknacker.engine.api.process.SourceFactory]] has to have method annotated with [[pl.touk.nussknacker.engine.api.MethodToInvoke]]
  * that returns [[pl.touk.nussknacker.engine.api.process.Source]]
  * IMPORTANT lifecycle notice:
  * Implementations of this class *must not* allocate resources (connections, file handles etc.)
  */
trait SourceFactory[+T] extends Serializable {
  def clazz : Class[_]
}