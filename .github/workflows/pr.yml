name: "Build and Test"
on:
  pull_request:
    branches:
      - master
      - staging
  push:
    branches:
      - master
      - staging
env:
  #we use this variable in ciRunSbt.sh
  CROSS_BUILD: ${{ github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/master' || startsWith(github.head_ref, 'preview') }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - uses: olafurpg/setup-scala@v10
      - name: Build
        shell: bash
        run: ./ciRunSbt.sh clean compile
      - name: Tar artifacts
        shell: bash
        run:  find . -wholename "**/target/**/*" -printf '%P\0' | tar --null -C '.' --files-from=- -czf 'target.tgz'
      - name: Store target
        uses: actions/upload-artifact@v2
        with:
          name: build-target
          path: target.tgz
  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v10
      - uses: actions/download-artifact@v2
        with:
          name: build-target
      - name: Untar artifacts
        shell: bash
        run:  tar xfz target.tgz
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - name: Backend tests
        shell: bash
        #TODO: coverage?
        run: ./ciRunSbt.sh test

  crossCompile:
    name: CrossCompile
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v1
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - uses: olafurpg/setup-scala@v10
      - uses: actions/download-artifact@v2
        with:
          name: build-target
      - name: Untar artifacts
        shell: bash
        run:  tar xfz target.tgz
      - name: Compile
        shell: bash
        run: CROSS_BUILD=true ./ciRunSbt.sh compile:compile test:compile
  integrationTests:
    name: IntegrationTests
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - uses: olafurpg/setup-scala@v10
      - uses: actions/download-artifact@v2
        with:
          name: build-target
      - name: Untar artifacts
        shell: bash
        run:  tar xfz target.tgz
      - name: Integration tests
        shell: bash
        run: ./ciRunSbt.sh flinkProcessManager/it:test engineStandalone/it:test
  slowTests:
    name: Slow tests
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v1
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - uses: olafurpg/setup-scala@v10
      - uses: actions/download-artifact@v2
        with:
          name: build-target
      - name: Untar artifacts
        shell: bash
        run:  tar xfz target.tgz
      - name: Slow tests
        shell: bash
        run: ./ciRunSbt.sh ui/slow:test

  frontendTests:
    name: FrontendTests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14.11.0
      - run: ./ciFrontendTest.sh
  dockerTest:
    name: DockerTest
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v1
      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14.11.0
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - uses: olafurpg/setup-scala@v10
      - uses: actions/download-artifact@v2
        with:
          name: build-target
      - name: Untar artifacts
        shell: bash
        run:  tar xfz target.tgz
      - name: Prepare docker
        shell: bash
        run: echo "version in ThisBuild := \"$GITHUB_SHA\"" > version.sbt && ./ciRunSbt.sh dist/docker:publishLocal
      - name: Test docker
        shell: bash
        env:
          NUSSKNACKER_VERSION: ghactionstest-${{ github.sha }}
        run: cd ./demo/docker && ./testQuickstart.sh

#TODO: extract to different workflow?
  publish:
    runs-on: ubuntu-latest
    needs: [build, tests, crossCompile, integrationTests, slowTests, frontendTests, dockerTest]
    if: ${{ github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/master' || startsWith(github.head_ref, 'preview') }}
    steps:
      - uses: actions/checkout@v1
      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14.11.0
      - name: Setup npm
        run: (cd ui/client; npm ci)
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - uses: olafurpg/setup-scala@v10
      - uses: actions/download-artifact@v2
        with:
          name: build-target
      - name: Untar artifacts
        shell: bash
        run:  tar xfz target.tgz
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build
        shell: bash
        env:
          #TODO: shouldn't be needed...
          nexusUrl: https://oss.sonatype.org/content/repositories/snapshots
          nexusUser: ${{ secrets.SONATYPE_USER }}
          nexusPassword: ${{ secrets.SONATYPE_PASSWORD }}
        #TODO: handle version better
        run: sbt -J-Xms1000M -J-Xmx1000M "set version in ThisBuild := (version in ThisBuild).value.replace(\"-SNAPSHOT\", \"-$(date -I)-$GITHUB_RUN_NUMBER-$GITHUB_SHA-ghactionstest-SNAPSHOT\")" publish dist/docker:publish

