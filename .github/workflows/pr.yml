name: CI
on:
  pull_request:
    branches:
      - master
      - staging
      - fixes/*
  push:
    branches:
      - master
      - staging
      - demo
      - preview/*
      - release/*
      - fixes/*
    #TODO: currently release is done manually, we don't want to run this pipeline on released version, to avoid accidental pushes
    tags-ignore:
      - '**'
env:
  #we use this variable in ciRunSbt.sh
  #NOTE: for publishing we use different settings, we don't use ciRunSbt.sh there
  CROSS_BUILD: ${{ github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/fixes') }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "openjdk@1.11"
      - name: Build
        shell: bash
        run: ./ciRunSbt.sh clean compile
      - name: Tar artifacts
        shell: bash
        run:  find . -wholename "**/target/**/*" -printf '%P\0' | tar --null -C '.' --files-from=- -czf 'target.tgz'
      - name: Store target
        uses: actions/upload-artifact@v2
        with:
          name: build-target
          path: target.tgz
  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "openjdk@1.11"
      - uses: actions/download-artifact@v2
        with:
          name: build-target
      - name: Untar artifacts
        shell: bash
        run:  tar xfz target.tgz
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - name: Backend tests
        shell: bash
        run: ./ciRunSbt.sh coverage test coverageReport
      - name: Upload Coverage data to Coveralls
        shell: bash
        run: ./ciRunSbt.sh coverageAggregate coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  crossCompile:
    name: CrossCompile
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "openjdk@1.11"
      - uses: actions/download-artifact@v2
        with:
          name: build-target
      - name: Untar artifacts
        shell: bash
        run:  tar xfz target.tgz
      - name: Compile
        shell: bash
        run: CROSS_BUILD=true ./ciRunSbt.sh compile:compile test:compile
  integrationTests:
    name: IntegrationTests
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "openjdk@1.11"
      - uses: actions/download-artifact@v2
        with:
          name: build-target
      - name: Untar artifacts
        shell: bash
        run:  tar xfz target.tgz
      - name: Integration tests
        shell: bash
        run: ./ciRunSbt.sh flinkProcessManager/it:test engineStandalone/it:test processReports/it:test security/it:test
  slowTests:
    name: Slow tests
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "openjdk@1.11"
      - uses: actions/download-artifact@v2
        with:
          name: build-target
      - name: Untar artifacts
        shell: bash
        run:  tar xfz target.tgz
      - name: Slow tests
        shell: bash
        run: ./ciRunSbt.sh ui/slow:test

  frontendTests:
    name: FrontendTests
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Test FE
        run: |
          cd ui/client
          npm ci
          npm run test:unit

  dockerTest:
    name: Docker based tests
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Setup npm
        run: (cd ui/client; npm ci)
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "openjdk@1.11"
      - uses: actions/download-artifact@v2
        with:
          name: build-target
      - name: Untar artifacts
        shell: bash
        run:  tar xfz target.tgz
      - name: set version
        shell: bash
        run: |
          nk_version=`sbt -Dsbt.color=never -Dsbt.supershell=false 'inspect actual version' | grep "Setting: java.lang.String" | cut -d '=' -f2 | tr -d ' '`
          echo "NUSSKNACKER_VERSION=${nk_version}-$GITHUB_SHA" >> $GITHUB_ENV
      - name: Prepare docker
        env:
          addDevModel: true
        shell: bash
        #Doc generation is rather costly, we don't want it in test image creation
        run: echo "version in ThisBuild := \"${{ env.NUSSKNACKER_VERSION }}\"" > version.sbt && sbt "set publishArtifact in (ThisBuild, packageDoc) := false; set sources in (Compile,doc) := Seq.empty" standaloneApp/docker:publishLocal dist/docker:publishLocal
      - name: FE tests e2e
        env:
          NUSSKNACKER_VERSION: ${{ env.NUSSKNACKER_VERSION }}
          CYPRESS_BASE_URL: http://localhost:8083
        shell: bash
        run: |
          docker run -d -p 8083:8080 -e CONFIG_FORCE_scenarioTypes_streaming_deploymentConfig_type=stub -e NUSSKNACKER_CONFIG_FILE=/opt/nussknacker/conf/dev-application.conf --name nussknacker_e2e_fe touk/nussknacker:$NUSSKNACKER_VERSION
          cd ui/client
          npx wait-on $CYPRESS_BASE_URL && npm run test:e2e
          docker kill nussknacker_e2e_fe
      - name: Test quickstart
        shell: bash
        env:
          NUSSKNACKER_VERSION: ${{ env.NUSSKNACKER_VERSION }}
        run: cd ./demo/docker && ./testQuickstart.sh
      - name: Store test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: e2e-test-results
          path: |
            ui/client/cypress/**/__image_snapshots__/
            ui/client/cypress/screenshots/
            ui/client/cypress/videos/
          if-no-files-found: ignore

#TODO: extract to different workflow?
  publish:
    runs-on: ubuntu-latest
    needs: [build, tests, crossCompile, integrationTests, slowTests, frontendTests, dockerTest]
    #TODO: should we publish everything on all those branches?
    if: ${{ github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/demo' || startsWith(github.ref, 'refs/heads/fixes') || startsWith(github.ref, 'refs/heads/preview') || startsWith(github.ref, 'refs/heads/release') }}
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v2
      - name: Cache npm
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Setup npm
        run: (cd ui/client; npm ci)
      - name: Cache ivy packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
          key: ${{ runner.os }}-ivy2-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-sbt
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "openjdk@1.11"
      - uses: actions/download-artifact@v2
        with:
          name: build-target
      - name: Untar artifacts
        shell: bash
        run:  tar xfz target.tgz
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      #TODO: Figure out how to version SNAPSHOTs
      - name: Define version and branch
        shell: bash
        run: |
          GIT_SOURCE_BRANCH=`([ "${GITHUB_HEAD_REF}" != "" ] && echo "${GITHUB_HEAD_REF}" || echo "${GITHUB_REF}") | sed 's/refs\/heads\///g' `
          echo "GIT_SOURCE_BRANCH=$GIT_SOURCE_BRANCH" >> $GITHUB_ENV
          SANITIZED_BRANCH=`echo ${GIT_SOURCE_BRANCH} | sed 's/[^a-zA-Z0-9.\-_]/\_/g' | awk '{print tolower($0)}'`
          echo "VERSION_SUFFIX=-$SANITIZED_BRANCH-$(date -I)-$GITHUB_RUN_NUMBER-$GITHUB_SHA" >> $GITHUB_ENV
      - name: Build
        shell: bash
        env:
          #TODO: shouldn't be needed...
          nexusUrl: https://oss.sonatype.org/content/repositories/snapshots
          nexusUser: ${{ secrets.SONATYPE_USER }}
          nexusPassword: ${{ secrets.SONATYPE_PASSWORD }}
          addDevModel: ${{ github.ref == 'refs/heads/staging' }}
        #TODO: handle version better, do we want to publish docker image for older scala versions? If so, how should it be tagged?
        run: sbt -J-Xms1000M -J-Xmx1000M "set version in ThisBuild := (version in ThisBuild).value.replace(\"-SNAPSHOT\", \"${VERSION_SUFFIX}-SNAPSHOT\")" +publish dist/docker:publish standaloneApp/docker:publish

