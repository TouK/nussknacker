db {
  url: "jdbc:hsqldb:mem:testDB;sql.syntax_ora=true"
  driver: "org.hsqldb.jdbc.JDBCDriver"
  user: "SA"
  password: ""
  connectionTimeout: 30000
}

authentication:  {
  method: "BasicAuth"
  usersFile: "ui/server/develConf/tests/basicauth-users.conf"
}

http {
  interface: "localhost"
  publicPath: "/"
}

environmentAlert:{
  content: "DEVELOPMENT ENVIRONMENT"
  cssClass: "indicator-green"
}
developmentMode: true

environment: "test"
attachmentsPath: "/tmp/attachments"

categoriesConfig: {
  "Category1": "streaming",
  "Category2": "streaming",
  "TESTCAT": "streaming",
  "TESTCAT2": "streaming",
  "ReqRes": "request-response"
}

customProcesses {
  "customProcess1": "pl.touk.custom.NotExistingClass"
}

flinkConfig {
  restUrl: "localhost:8081"
  queryableStateProxyUrl: "localhost:9123"
  jobManagerTimeout: 1m
  jarPath: "engine/flink/management/sample/target/scala-2.11/managementSample.jar"
}

standaloneConfig {
  jarPath: "engine/standalone/engine/sample/target/scala-2.11/standaloneSample.jar"
}

standaloneProcessConfig {
}

processConfig {
  checkpointInterval: 10s
  timeout: 10s
  asyncExecutionConfig {
    bufferSize: 200
    parallelismMultiplier: 2
  }
  kafka = {
    kafkaAddress = "notexisting.org:9092"
  }

  signals {
    topic: "esp.test.dev.signals"
  }

  documentationBase: "https://touk.github.io/nussknacker/"

  nodes: {
    enricher: {
      params {
        param: {
          defaultValue: "'default value'"
          restriction: {
            type: "FixedExpressionValues"
            values: [
              {"label": "first", "expression": "'default value'"},
              {"label": "second", "expression": "'other value'"},
            ]
          }
        }
      },
      icon: "Filter.svg"
    },
    test1: {
      icon: "Sink.svg"
    }
  }

  nodeCategoryMapping: {
    "base":"base",
    "custom":"base"
  }

}

akka.test.timefactor=20.0

intervalTimeSettings: {
  processes: 20000
  healthCheck: 30000
}