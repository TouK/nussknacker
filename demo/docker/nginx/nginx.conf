http {
  server {
    listen 80;

    location /grafana/ {
      proxy_pass http://grafana:3000/;
    }

    location /kibana/ {
      proxy_pass http://kibana:5601/;
    }

    location /flink/ {
      proxy_pass http://jobmanager:8081/;
    }

#    location /kafka-manager/ {
#      set $kafka_manager_url http://kafka-manager:9000/kafka-manager/;
#      proxy_pass $kafka_manager_url;
#      proxy_connect_timeout   2;
#      proxy_redirect off;
#      proxy_buffering off;
#      proxy_set_header Host $host;
#      proxy_set_header X-Real-IP $remote_addr;
#      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }

    # this is the internal Docker DNS, cache only for 30s
    # This setting + substitution pattern used below is because we want ot have separated compose for app and environment.
    # More details you can find here: https://sandro-keil.de/blog/let-nginx-start-if-upstream-host-is-unavailable-or-down/
    # It not works with services (e.g.) grafana (error: "Grafana has failed to load its application files")
    resolver 127.0.0.11 valid=30s;

    location / {
      set $app_url http://app:8080;
      proxy_pass $app_url;
    }
  }

  server {
    listen 5601;

    location / {
      return 404 "Kibana is unavailable";
    }
  }
}

events {}
