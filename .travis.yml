language: scala

jdk:
  - openjdk11

sudo: required

services:
  - docker

addons:
  chrome: stable

# Whitelist for push builds. Pull request builds don't look at this.
branches:
  only:
    - master
    - demo
    - staging
    - /^preview/.*$/

dist: bionic

git:
  depth: false

env:
  global:
    - APPLICATION_NAME=nussknacker
    - AWS_DEFAULT_REGION=eu-west-1
    - SOURCE_BRANCH=`[ "${TRAVIS_PULL_REQUEST_BRANCH}" != "" ] && echo "${TRAVIS_PULL_REQUEST_BRANCH}" || echo "${TRAVIS_BRANCH}"`
    - SANITIZED_BRANCH=`echo ${SOURCE_BRANCH} | sed 's/[^a-zA-Z0-9]/\_/g' | awk '{print tolower($0)}'`
    - SANITIZED_TRAVIS_BRANCH=`echo ${TRAVIS_BRANCH} | sed 's/[^a-zA-Z0-9]/\_/g' | awk '{print tolower($0)}'`
    - FORMATTED_DATE=$(git show -s --date=format:'%Y-%m-%d-%H-%M' --format=%cd $TRAVIS_COMMIT)
    - BUILD_VERSION=$(if [[ -n $TRAVIS_TAG ]]; then echo "${SANITIZED_BRANCH}"; else echo "${FORMATTED_DATE}-${SANITIZED_BRANCH}-$TRAVIS_COMMIT"; fi)
    - DOCKER_SOURCE_TAG=`echo ${DOCKER_PACKAGE_USERNAME}/${DOCKER_PACKAGENAME}:${BUILD_VERSION}`
    - DOCKER_REPOSITORY=`echo ${DOCKER_PACKAGE_USERNAME}/${DOCKER_PACKAGENAME}`
    - COVERAGE=`[ "${SOURCE_BRANCH}" == "master" ] && echo "true" || echo "false"`
    #We do cross build in tests only for staging/master
    - CROSS_BUILD=`( [[ "${SOURCE_BRANCH}" == "staging" ]] || [[ "${SOURCE_BRANCH}" == "master" ]] || [[ "${SOURCE_BRANCH}" =~ ^preview/.*$ ]] ) && echo "true" || echo "false"`
    - ADD_DEV_MODEL=`[[ "${SOURCE_BRANCH}" =~ "staging" ]] && echo "true" || echo "false"`
    - FE_ONLY=$(source .travis/diff_files.sh)
    - SBT_SNAPSHOT=$(source .travis/check_sbt_snapshot_version.sh)

before_script:
  # We want to be sure that only snapshot builds are going through travis pipeline to avoid situation when someone override released version
  - if [[ "$SBT_SNAPSHOT" == "false" ]]; then travis_terminate 0; fi
  # We have to terminate jobs here because "if" checks before git checkout & before env is set.
  - if [[ "$FE_ONLY" == "true" ]]; then travis_terminate 0; fi

# Cleanup the cached directories to avoid unnecessary cache updates
before_cache:
  - rm -fv $HOME/.ivy2/.sbt.ivy.lock
  - rm -fv $HOME/.npm/anonymous-cli-metrics.json
  - find $HOME/.ivy2/cache -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt        -name "*.lock"               -print -delete

# These directories are cached to S3 at the end of the build
cache:
  directories:
    - $HOME/.ivy2/cache
    - $HOME/.sbt/boot/
    - $HOME/.npm

stages:
  - test
  - name: releases
    # We don't allow do releases from fork and corn type because of security: https://docs.travis-ci.com/user/pull-requests/#pull-requests-and-security-restrictions
    # We also don't allow for pull request builds because they are built from merge of source and upstream branches.
    # See more: https://docs.travis-ci.com/user/pull-requests/#how-pull-requests-are-built . Use preview branches instead.
    if: fork = false AND type != cron AND type != pull_request

jobs:
  include:
    - stage: test
      name: "Backend tests"
      script: ./ciBackendTest.sh
      after_success: if [ "$COVERAGE" = true ]; then ./ciRunSbt.sh coveralls; else echo "Skipping coveralls"; fi
    - name: "Slow tests"
      script: ./ciRunSbt.sh clean ui/slow:test
    - name: "Integration tests"
      script: ./ciRunSbt.sh clean management/it:test engineStandalone/it:test
    - name: "Cross Scala compile"
      script: CROSS_BUILD=true ./ciRunSbt.sh clean compile:compile test:compile
      # We can't use env(CROSS_BUILD) here because of some bug in travis - there is raw, not evaluated script body in env(CROSS_BUILD)
      if: type = pull_request
    - name: "Frontend tests"
      before_script:
        # We want to be sure that only snapshot builds are going through travis pipeline to avoid situation when someone override released version
        - if [[ "$SBT_SNAPSHOT" == "false" ]]; then travis_terminate 0; fi
        - nvm install $(cat .nvmrc)
        - npm install -g npm
        - node -v
        - npm -v
      script: ./ciFrontendTest.sh
    - stage: releases
      name: "Release sonatype packages"
      before_script:
        # We want to be sure that only snapshot builds are going through travis pipeline to avoid situation when someone override released version
        - if [[ "$SBT_SNAPSHOT" == "false" ]]; then travis_terminate 0; fi
        - nvm install $(cat .nvmrc)
        - npm install -g npm
        - node -v
        - npm -v
      script: ./ciPublish.sh "${BUILD_VERSION}-SNAPSHOT" ${NEXUS_PASSWORD} ${NEXUS_URL} ${NEXUS_USER}
    - name: "Push Docker Image"
      before_script:
        # We want to be sure that only snapshot builds are going through travis pipeline to avoid situation when someone override released version
        - if [[ "$SBT_SNAPSHOT" == "false" ]]; then travis_terminate 0; fi
        - nvm install $(cat .nvmrc)
        - npm install -g npm
        - node -v
        - npm -v
      script:
        #We use separate script, as travis does not stop after command error: https://github.com/travis-ci/travis-ci/issues/1066
        - ./.travis/buildPushDocker.sh
