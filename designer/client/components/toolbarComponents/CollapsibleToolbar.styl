@require "../../stylesheets/_variables.styl"

headerTextSize = panelHeaderTextSize
headerBackground = panelHeaderBackground
background = panelBackground
border = panelBorder
headerText = panelHeaderText
width = sidebarWidth
text = panelText

:export {
  headerText: headerText
  border: border
  background: background
  headerBackground: headerBackground
  headerTextSize: headerTextSize
  width: width
  text: text
}

:local(.wrapper) {
  pointer-events: auto;
}

:local(.panel) {
  background: rgba(background, 1);
  border: 0 solid border;
  min-width: width;
  max-width: width;

  &-heading {
    background: headerBackground;
    color: headerText;
    text-transform: uppercase;
  }

  &-title {
    font-size: headerTextSize * 1px;
    font-family: 'Open Sans';
    font-weight: 600;
    color: headerText;

    & > a {
      display: flex;
      justify-content: space-between;
      height: headerTextSize * 2px;
      line-height: headerTextSize * 2px;
      flex-grow: 0;
    }

    & > a,
    & > a:focus,
    & > a:hover {
      text-decoration: none;
      color: headerText;
    }
  }

  &-body {
    min-width: (width - 2);
    color: text;
    user-select: text;
  }
}

:local(.collapsing) {
  transition: all .2s ease-in-out;
}

:local(.expanding) {
  transition: all .3s ease-in-out;
}

:local(.collapsed) {
  max-width: width;
  opacity: .86;
}

:local(.collapse-title) {
  padding: 0 (headerTextSize * 3px / 4);
  overflow: hidden;
  text-overflow: ellipsis;
  flex: 1;
}

:local(.collapse-icon) {
  padding: (headerTextSize * 1px / 2) 8px;
  height: headerTextSize * 2px;
  flex-shrink: 0;
  transition: all .3s;
  transform: rotate(90deg);

  :local(.collapsed) & {
    transform: rotate(180deg);
  }
}
