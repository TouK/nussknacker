db {
  url: "jdbc:hsqldb:mem:testDB;sql.syntax_ora=true"
  driver: "org.hsqldb.jdbc.JDBCDriver"
  user: "SA"
  password: ""
  connectionTimeout: 30000
}

authentication:  {
  method: "BasicAuth"
  usersFile: "designer/server/src/test/resources/basicauth-users.conf"
}

http {
  interface: "localhost"
  publicPath: "/"
}

environmentAlert:{
  content: "DEVELOPMENT ENVIRONMENT"
  color: "indicator-green"
}

developmentMode: true

environment: "test"

categoriesConfig: {
  "Category1": "streaming",
  "Category2": "streaming",
  "TESTCAT": "streaming",
  "TESTCAT2": "streaming",
  "ReqRes": "request-response"
}

scenarioTypes {
  "streaming" {
    deploymentConfig {
      restUrl: "http://localhost:8081"
      jobManagerTimeout: 1m
      type: "flinkStreaming"
    }

    modelConfig {
      classPath: [
        "engine/flink/management/dev-model/target/scala-"${scala.major.version}"/devModel.jar",
        "engine/flink/executor/target/scala-"${scala.major.version}"/flinkExecutor.jar"
      ]
      checkpointConfig {
        checkpointInterval: 10s
      }
      timeout: 30s
      asyncExecutionConfig {
        bufferSize: 200
        workers: 8
      }
      kafka = {
        kafkaProperties {
          "bootstrap.servers": "notexisting.org:9092"
        }
      }

      withMockedConfluent: true

      documentationBase: "https://touk.github.io/nussknacker/"

      additionalPropertiesConfig {
        environment {
          value: "OverriddenByConf"
        }
      }

      configValueToLoadFrom: "someDummyValue"

      componentsUiConfig: {
        enricher: {
          params {
            param: {
              defaultValue: "'default value'"
              editor: {
                type: "StringParameterEditor"
              }
            }
          }
          icon: "/assets/components/Filter.svg"
        }
        test1: {
          icon: "/assets/components/Sink.svg"
        }
        multipleParamsService: {
          params {
            baz: {
              editor: {
                type: "FixedValuesParameterEditor",
                possibleValues: [
                  {"label": "1", "expression": "1"},
                  {"label": "2", "expression": "2"}
                ]
              }
            }
          }
        }
        dynamicMultipleParamsService: {
          params {
            foo: {
              defaultValue: "'fooValueFromConfig'"
            }
          }
        }
        sub1: {
          params {
            param1: {
              editor: {
                type: "StringParameterEditor"
              }
            }
          }
          docsUrl: "http://nussknacker.io"
        }
        optionalTypesService: {
          params {
            overriddenByFileConfigParam: {
              validators: []
            }
          }
        }
        simpleTypesService: {
          params {
            booleanParam: {
              validators: []
            }
          }
        }
      }

      componentsGroupMapping: {
        "base":"base"
        "custom":"base"
        "hiddenCategory":null
      }
      #We disable kafka ComponentProvider from kafkaLite, which is unnecessarily added to classpath when running in Idea...
      components {
        kafka.disabled: true
      }

    }
  }
}

akka.test.timefactor=20.0
akka.http.server.request-timeout=1 minute

intervalTimeSettings: {
  processes: 20000
  healthCheck: 30000
}

processToolbarConfig {
  defaultConfig {
    topLeft: [
      { type: "tips-panel" }
      { type: "creator-panel" }
    ]
    topRight: [
      {
        type: "process-info-panel"
        buttons: [
          { type: "process-save", disabled: { subprocess: false, archived: true, type: "oneof" } }
          { type: "process-deploy", disabled: { subprocess: false, archived: true, type: "allof" } }
          { type: "custom-link", url: "/test/$processId", title: "Custom link for $processName", name: "custom" }
        ]
      }
    ]
  }
}

testDataSettings: {
  maxSamplesCount: 20
  testDataMaxLength: 10000
  resultsMaxBytes: 50000000
}

notifications {
  duration: 1 minute
}

usageStatisticsReports {
  enabled: true
  fingerprint: ${?USAGE_REPORTS_FINGERPRINT}
  source: ${?USAGE_REPORTS_SOURCE}
}

repositoryGaugesCacheDuration: 10 seconds

backendCodeSuggestions: false