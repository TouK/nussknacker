x-flink-service-common: &common-flink
  depends_on:
    flink-scala213-downloader:
      condition: service_completed_successfully
  volumes:
    - /tmp/flink-scala-2-13_2.13-1.1.1-assembly.jar:/opt/flink/lib/flink-scala-2-13_2.13-1.1.1-assembly.jar
  entrypoint: [
    "sh", "-c",
    "rm -f /opt/flink/lib/flink-scala_2.12* && chown flink /opt/flink/lib/flink-scala-2-13_2.13-1.1.1-assembly.jar && /ex-docker-entrypoint.sh \"$@\"", "--"
  ]

services:

  bootstrap-setup:
    image: touk/nussknacker-example-scenarios-library:0.3.0
    depends_on:
      nginx:
        condition: service_healthy
      designer:
        condition: service_healthy
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    environment:
      DISABLE_EMBEDDED_EXAMPLES: true
      NU_DESIGNER_ADDRESS: "nginx:8080"
      NU_REQUEST_RESPONSE_OPEN_API_SERVICE_ADDRESS: "nginx:8181"
      KAFKA_ADDRESS: "kafka:9092"
      SCHEMA_REGISTRY_ADDRESS: "schema-registry:8081"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  designer:
    image: touk/nussknacker:${NUSSKNACKER_VERSION:?NUSSKNACKER_VERSION must be defined}_scala-2.13

  postgres:
    ports:
      - 5432:5432

  influxdb:
    ports:
      - 3086:8086

  kafka:
    ports:
      - 3032:9092

  schema-registry:
    ports:
      - 3082:8081

  flink-jobmanager:
    ports:
      - 3031:8081
    <<: *common-flink

  flink-taskmanager:
    <<: *common-flink

  grafana:
    ports:
      - 8081:3000

  flink-scala213-downloader:
    image: curlimages/curl:7.85.0
    volumes:
      - /tmp:/data
    entrypoint: [
      "sh", "-c",
      "curl -o /data/flink-scala-2-13_2.13-1.1.1-assembly.jar https://repo1.maven.org/maven2/pl/touk/flink-scala-2-13_2.13/1.1.1/flink-scala-2-13_2.13-1.1.1-assembly.jar"
    ]
